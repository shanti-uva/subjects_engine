<%= javascript_on_load do %>
  // Ajaxify the pagination for lists of features
  jQuery('.has-ajax-pagination .pagination a').on('click', function() {
    var this_link = this;
    jQuery.ajax({
      type: 'POST',
      url: this.href,
      success: function(html){
        jQuery(this_link).parents('.pagination-click-results:first').html(html);
      }
    });
    return false;
  });

<% end %>
<script type="text/javascript">
// This is a switch that we can turn off when we "Expand/collapse all" to allow more than one
// Ajax div to be open at once.
var accordion_enabled = true;

function on_click(ajax_div_id){
  var ajax_div = $('#'+ajax_div_id);
  var link_parent = ajax_div.prev('p').find('a');
  var toggle_speed = 300;
  // This is used after ajax_div.toggle(), so it is the opposite of the current state.
  var is_hidden = !(ajax_div.css('display') == 'none');
  
  // Toggle the Ajax div
  ajax_div.toggle(toggle_speed);

  if(accordion_enabled){
    // Hide all of the other Ajax divs and switch their "expanded/contracted" state.
    $('.related-feature-list').not('#'+ajax_div_id)
      .hide(toggle_speed)
      .prev('p').find('a').removeClass('expandable-link-expanded').addClass('expandable-link-contracted');
  }

  // Change the Ajax div's "expanded/contracted" state.
  if(is_hidden){
  link_parent.removeClass('expandable-link-expanded').addClass('expandable-link-contracted');
  }else{
  link_parent.removeClass('expandable-link-contracted').addClass('expandable-link-expanded');
  }

  // If the ajax_div is now hidden, return false so that the Ajax isn't called again.
  if(is_hidden){
  return false;
  }
  return true;
}

function expand_all(){
  accordion_enabled = false;
  $('.related-features .expandable-link-contracted').click();
  accordion_enabled = true;
  $('.collapse-all').show();
  $('.expand-all').hide();
}

function collapse_all(){
  accordion_enabled = false;
  $('.related-features .expandable-link-expanded').click();
  accordion_enabled = true;
  $('.expand-all').show();
  $('.collapse-all').hide();
}
</script>
<% feature_label = fname_labels(@feature).s %>
<%= javascript_on_load do %>
  var termIndex = "<%= Feature.config.url %>";
  var assetIndex = "<%= Flare.config.asset_url %>";
  var count = 0;
  var key =  "<%= Feature.uid_prefix %>-<%= @feature.fid %>";
  var relatedCountsUrl =
  termIndex + '/select?q={!child of=block_type:parent}id:' + key + '&wt=json&indent=true&group=true&group.field=block_child_type&group.limit=0&wt=json&json.wrf=?';
  $.ajax({
    type: "GET",
    url: relatedCountsUrl,
    dataType: "jsonp",
    timeout: 90000,
    error: function (e) {
      console.error(e);
    },
    beforeSend: function () {
    },

    success: function (data) {
      var updates = {};

      $.each(data.grouped.block_child_type.groups, function (x, y) {
      var block_child_type = y.groupValue;
      var rel_count = y.doclist.numFound;
      updates[block_child_type] = rel_count;
      });

      count = updates;
      $(".relatedCountContainer").each(function(){
          $(this).html(count["related_<%= Feature.uid_prefix %>"]);
      });
    }
  });
<% end %>
<%= javascript_on_load do %>
  //Code for Summary
  var termIndex = "<%= Feature.config.url %>";
  var assetIndex = "<%= Flare.config.asset_url %>";
  var domain = "<%= Feature.uid_prefix %>";
  var perspective = "<%= current_perspective.code %>";
  var SOLR_ROW_LIMIT = 200;
  var count = 0;
  var featureId =  "<%= Feature.uid_prefix %>-<%= @feature.fid %>";
  var featuresPath = "<%= features_path %>/%%ID%%";
  var fieldList = [
    "header",
    "id",
    "ancestor*",
    "caption_eng",
    "related_"+domain+"_feature_type_s",
    "related_"+domain+"_relation_label_s"
  ].join(",");
  if(domain == "places"){
    fieldList += ",related_subjects_t";
  }
  var url = termIndex + "/select?" +
  "&q=" + "{!child of=block_type:parent}id:" + featureId +
  "&fl=*,uid,related_"+domain+"_id_s,related_"+domain+"_header_s" +","+ fieldList +
  "&rows=" + SOLR_ROW_LIMIT +
  "&indent=true" +
  "&wt=json" +
  "&json.wrf=?" +
  "&sort=related_"+domain+"_header_s+asc";
  $.ajax({
    url: url,
    dataType: 'jsonp',
    jsonp: 'json.wrf'
  }).done(function(data){
    const response = data.response;
    if(response.numFound > 0){
      const result = response.docs.reduce(function(acc,currentNode,index){
        let node_type = currentNode["related_kmaps_node_type"] ;
        if(node_type === undefined) {
          node_type = "other";
        }
        if(acc[node_type] === undefined){
          acc[node_type] =  [];
        }
        let relation_label = currentNode["related_"+ domain +"_relation_label_s"];
        if(acc[node_type][relation_label] === undefined){
          acc[node_type][relation_label] = [];
        }
        let node_id = currentNode['related_'+domain+'_id_s'];
        acc[node_type][relation_label][node_id] = currentNode;
        return acc;
      }, []);
      var feature_name = $('<%= feature_label %>')[0];
      function addSummaryItems(group_key,data,container){
        for(var key in data[group_key]){ //parent,child, other
          var feature_block = jQuery('<div></div>').addClass('feature-block');
          var header = jQuery('<h6></h6>').html(feature_name.innerText +" "+ key);
          var relation_subject_list = jQuery('<ul style="list-stype:none;" class="collapsibleList"></ul>');
          var relation_subject_item = jQuery('<li class="collapsible_list_header"></li>');
          relation_subject_item.append(header);
          var related_subject_list = jQuery('<ul></ul>');
          var feature_count = 0;
          var sortedFeatures = data[group_key][key];
          for(var related_subject_index in sortedFeatures){
            var relation = jQuery('<li></li>');
              var currNode = sortedFeatures[related_subject_index];
              var currNodeID = currNode["related_"+domain+"_id_s"].replace(domain+"-","");
              relation.append("<a href="+featuresPath.replace("%%ID%%",currNodeID)+">"+currNode["related_"+domain+"_header_s"]+"</a>");
              related_subject_list.append(relation);
              feature_count++;
          }
          relation_subject_item.append(related_subject_list);
          relation_subject_list.append(relation_subject_item);
          feature_block.append(relation_subject_list);
          container.append(feature_block);
        }
      }
      function featureSort(features){
        var featuresArr = [];
        for(var key in features){
            var index = 0;
            while(index < featuresArr.length){
              var curr_feature = featuresArr[index];
              if(features[key]["related_"+domain+"_header_s"] < curr_feature["related_"+domain+"_header_s"] )
                break;
              index++;
            }
            featuresArr.splice(index,0,features[key]);
        }
        return featuresArr;
      }
      addSummaryItems('parent',result,jQuery('.'+domain+'-in-'+domain));
      addSummaryItems('child',result,jQuery('.'+domain+'-in-'+domain));
      //addSummaryItems('other',result,jQuery('.'+domain+'-in-'+domain));
    } else {
     //Empty result set
    }
  });
<% end %>
<div id='myTabs'>
  <!-- Nav tabs -->
  <ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#relation_tree" aria-controls="profile" role="tab" data-toggle="tab">Relationships</a></li>
    <li role="presentation"><a id="summary-tab-link" href="#relation_details" aria-controls="home" role="tab" data-toggle="tab">Summary</a></li>
  </ul>
  <!-- Tab panes -->
  <div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="relation_tree">
      <section class="panel panel-content">
        <div class="panel-body">
          <p>
          <strong><%= feature_label %></strong> has <strong class="relatedCountContainer"></strong> subordinate subjects. You can browse those subordinate subjects as well as its superordinate categories with the tree below. See the summary tab if you instead prefer to view only  its immediately subordinate subjects grouped together in useful ways, as well as   subjects non-hierarchically related to it.
          </p>
            <div id='relation_tree_container'></div>
        </div> <!-- END panel-body -->
      </section> <!-- END panel -->
  </div>
    <div role="tabpanel" class="tab-pane" id="relation_details">
      <section class="panel panel-content">
        <div class="panel-body">
          <p>
          <strong><%= feature_label %></strong> has <strong class="relatedCountContainer"><%#= relation_counts %></strong> other subjects directly related to it, which are presented here. See the relationships tab if you instead prefer to browse  all subordinate and superordinate categories for <%= feature_label %>.
          </p>
          <h5> <span class="collapsible_all_btn collapsible_expand_all">Expand all</span> / <span class="collapsible_all_btn collapsible_collapse_all">Collapse all</span> </h5>
        <div class="subjects-in-subjects kmaps-list-columns related-features has-ajax-pagination has-hash-feature-links">
        </div> <!-- END  subjects-in-subjects -->
        <br />
          <h5> <span class="collapsible_all_btn collapsible_expand_all">Expand all</span> / <span class="collapsible_all_btn collapsible_collapse_all">Collapse all</span> </h5>
        <br />
        </div> <!-- END panel-body -->
      </section> <!-- END panel -->
    </div> <!-- END tabpanel -->
  </div> <!-- Tab Content -->
</div> <!-- myTabs end -->

<%= javascript_on_load do %>
  $('#summary-tab-link[data-toggle="tab"]').on('shown.bs.tab', function (e) {
    // Functionality for columnizer
    // dontsplit = don't break these headers
    $('.subjects-in-subjects').find('.column > h6, .column > ul > li, .column ul').addClass("dontsplit");
    // dontend = don't end column with headers
    $('.subjects-in-subject').find('.column > h6, .column > ul > li').addClass("dontend");
    $('.subjects-in-subjects').find('.feature-block').addClass("dontsplit");
    $('.kmaps-list-columns:not(.places-in-subjects):not(.already_columnized)').addClass('already_columnized').columnize({
      width: 330,
      lastNeverTallest : true,
      buildOnce: true
      });
    CollapsibleLists.apply();
    $("ul.collapsibleList li.collapsibleListClosed").trigger("click");
  });
  // END - Functionality for columnizer
  $(".collapsible_expand_all").on("click",function(e){
    $("ul.collapsibleList li.collapsibleListClosed").trigger("click");
  });
  $(".collapsible_collapse_all").on("click",function(e){
    $("ul.collapsibleList li.collapsibleListOpen").trigger("click");
  });

  $("#relation_tree_container").kmapsFancytree({
    featureId: "<%= @feature.fid %>",
    termIndex: "<%= Feature.config.url %>",
    assetIndex: "<%= Flare.config.asset_url %>",
    perspective: "<%= current_perspective.code %>",
    tree: "<%= Feature.uid_prefix %>", //subjects
    domain: "<%= Feature.uid_prefix %>", //subjects
    seedTree: {
      descendants: true,
      directAncestors: false,
    },
    displayPopup: true
  });
<% end %>
<style>
.collapsibleList li{
  cursor: auto;
}
li.collapsibleListOpen,li.collapsibleListClosed, .collapsible_all_btn{
  cursor: pointer;
}
li.collapsible_list_header::before{
  display: none !important;
}
.collapsible_all_btn{
  color: #454fa4;
}
.collapsible_all_btn:hover{
  color: #df3d26;
}
</style>
<%= javascript_include_tag('collapsible_list/CollapsibleLists') %>
